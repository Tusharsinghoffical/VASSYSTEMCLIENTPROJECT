"""
Django settings for userproject project.

Generated by 'django-admin startproject' using Django 4.2.

For full documentation, visit:
https://docs.djangoproject.com/en/4.2/
"""

from pathlib import Path
import os

# -------------------------------------------------
# ✅ Base Directory
# -------------------------------------------------
BASE_DIR = Path(__file__).resolve().parent.parent

# -------------------------------------------------
# ✅ Security Settings
# -------------------------------------------------
SECRET_KEY = "django-insecure-o26v6f4uzrha6km1sy=+tevuf_sdz6hryvx-@+)454!3x*h34#"
# SECRET_KEY = os.environ.get("django-insecure-o26v6f4uzrha6km1sy=+tevuf_sdz6hryvx-@+)454!3x*h34#", "unsafe-dev-secret-key")
# DEBUG = True
DEBUG = False
ALLOWED_HOSTS = ["vassystemclientproject.onrender.com", "localhost", "127.0.0.1"]



# -------------------------------------------------
# ✅ Installed Applications
# -------------------------------------------------
INSTALLED_APPS = [
    "home.apps.HomeConfig",

    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    'widget_tweaks',
    "import_export",  # For CSV export functionality
]

# -------------------------------------------------
# ✅ Middleware
# -------------------------------------------------
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # "django.middleware.security.SecurityMiddleware",
]

# -------------------------------------------------
# ✅ URL Configuration
# -------------------------------------------------
ROOT_URLCONF = "userproject.urls"

# -------------------------------------------------
# ✅ Templates
# -------------------------------------------------
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# -------------------------------------------------
# ✅ WSGI
# -------------------------------------------------
WSGI_APPLICATION = "userproject.wsgi.application"

# -------------------------------------------------
# ✅ Email Backend (for dev/testing)
# -------------------------------------------------
# EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = os.environ.get("EMAIL_HOST_USER")
# EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_HOST_PASSWORD")



ALLOWED_QR_CODE = "https://www.venusjewel.com/"

# -------------------------------------------------
# ✅ Database
# -------------------------------------------------
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# -------------------------------------------------
# ✅ Password Validation
# -------------------------------------------------
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# -------------------------------------------------
# ✅ Internationalization
# -------------------------------------------------
LANGUAGE_CODE = "en-us"
TIME_ZONE = "Asia/Kolkata"
USE_I18N = True
USE_TZ = True

# -------------------------------------------------
# ✅ Static Files
# https://docs.djangoproject.com/en/4.2/howto/static-files/
# -------------------------------------------------
STATIC_URL = "static/"

STATICFILES_DIRS = [
    BASE_DIR / "static",
    # "/var/www/static/",  # Optional custom path
]

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
# STATIC_ROOT = BASE_DIR / "staticfiles"  # Uncomment during deployment
STATIC_ROOT = BASE_DIR / "staticfiles"


# -------------------------------------------------
# ✅ Media Files (Optional)
# -------------------------------------------------
# MEDIA_URL = "/media/"
# MEDIA_ROOT = BASE_DIR / "media"

# -------------------------------------------------
# ✅ Authentication & Redirects
# -------------------------------------------------
LOGIN_REDIRECT_URL = "/redirect-after-login/"
LOGIN_URL = "/login/"
LOGOUT_REDIRECT_URL = "/login/"


# -------------------------------------------------
# ✅ Default Primary Key Field Type
# -------------------------------------------------
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
